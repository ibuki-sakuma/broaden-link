name: CI/CD Pipeline

on:
  push:
    branches:
      - main # mainブランチへのプッシュをトリガー
  pull_request:
    branches:
      - main # mainブランチへのプルリクエストをトリガー

jobs:
  build-and-test: # ビルドとテストのジョブ
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC認証に必要なパーミッション
      contents: read # リポジトリのコンテンツを読み取るパーミッション (actions/checkout@v4 で必要)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Configure AWS credentials # AWS認証情報の設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::632210747560:role/github-actions-deploy-role
          aws-region: ap-northeast-1 # AWSリージョン

      - name: Build with Maven and Run Tests
        run: mvn clean install -Dspring-boot.run.profiles=h2 -Dspring.profiles.active=h2 -Dspring.datasource.url=jdbc:h2:mem:testdb

  deploy: # デプロイのジョブ
    needs: build-and-test # build-and-testジョブが成功した場合のみ実行
    runs-on: ubuntu-latest
    # mainブランチへのpushイベントでのみデプロイを実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions: 
      id-token: write # OIDC認証に必要なパーミッション
      contents: read # リポジトリのコンテンツを読み取るパーミッション (actions/checkout@v4 で必要)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials # AWS認証情報の設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::632210747560:role/github-actions-deploy-role # 作成したIAMロールのARN
          aws-region: ap-northeast-1 # AWSリージョン

      - name: Login to Amazon ECR # Amazon ECRへのログイン
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx # Docker Buildxをセットアップ (ビルドキャッシュのため)
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image # Dockerイメージのビルドとプッシュ
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: 632210747560.dkr.ecr.ap-northeast-1.amazonaws.com/springboot-bookmark-manager:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      # ECSへのデプロイ
      - name: Download task definition # タスク定義のダウンロード
        run: |
          aws ecs describe-task-definition --task-definition springboot-bookmark-manager-task-definition --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition # タスク定義のイメージIDを更新
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: springboot-bookmark-manager-container
          image: 632210747560.dkr.ecr.ap-northeast-1.amazonaws.com/springboot-bookmark-manager:latest # ECRにプッシュしたイメージ

      - name: Deploy Amazon ECS task definition # ECS サービスへのデプロイ
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: springboot-bookmark-manager-service
          cluster: springboot-bookmark-manager-cluster
          wait-for-service-stability: true # デプロイの安定化を待つ